Roll no: 2310110428
Name: Arnab Mandal

Program-1:

#include <stdio.h>

int main()
{
    int nums[100], n;
    scanf("%d", &n);
    for (int i=0; i<n; i++)
    {
        scanf("%d", &nums[i]);
    }
    int b=1;
    while (b<=n)
    {
        int k=0;
        
        for (int x=0; x<n; x++)
        {
            if (nums[x]==b)
            {
                k=1;
                break;
            }
        }

        if (k==0)
        {
            printf("%d ", b);
        }

        ++b;
    }

    return 0;
}

Program-2:

#include <stdio.h>
#include <stdlib.h>

int compare(const void *a, const void *b);
int updown(int a[], int b[], int c);

int main()
{
    int price[100], n;
    scanf("%d", &n);
    for (int i=0; i<n; i++)
    {
        scanf("%d", &price[i]);
    }
    qsort(price, n, sizeof(int), compare); 
    if (n%2!=0)
    {
        for (int l=((n+1)/2)-1; l<n; l++)
        {
            price[l]=price[l+1];
        }
        n=n-1;
    }
    int final[n];
    updown (price, final, n);
    int profit=0;
    for (int q=0; q<n; q=q+2)
    {
        profit=profit+final[q+1]-final[q];
    }
    printf("%d", profit);
}

int compare(const void *a, const void *b)
{
    return (*(int*)a-*(int*)b);
}

int updown(int a[], int b[], int c)
{
    for (int x=0; x<c/2; x++)
    {
        b[2*x]=a[x];
        b[(2*x)+1]=a[c-x-1];
    }
}

Program-3: 

#include <stdio.h>

int bs(int a[], int i, int j, int x);

int main(void) {
    int nums[100], n, target;
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &nums[i]);
    }
    scanf("%d", &target);
    bs(nums, 0, n - 1, target);
    return 0;
}

int bs(int a[], int i, int j, int x) {
    int mid;
    if (i == j) {
        if (a[i] == x) {
            printf("%d", i);
        } else {
            printf("-1");
        }
    } else {
        mid = (i + j) / 2;
        if (a[mid] == x) {
            printf("%d", mid);
        } else {
            if (a[mid] > x) {
                bs(a, i, mid - 1, x);
            } else {
                bs(a, mid + 1, j, x);
            }
        }
    }
    return 0;  // Include a return statement here
}


Program-4:

#include <stdio.h>

int bs(int a[], int i, int j, int x);//estabilishing binary search function
int main(void)
{
    
    int nums[100], n, target;
	scanf("%d", &n);
	for(int i=0; i<n; i++)
	{
		scanf("%d", &nums[i]);
	}
	scanf("%d", &target);
    
    bs(nums, 0, n-1, target);
    return 0;
}	

int bs(int a[], int i, int j, int x)
{
    int mid;
    if (i==j)//aka only one element
    {
        if (a[i]==x)
        {
            printf("%d", i);//element found
        }
        else
        {
            printf("-1");//element not found
        }
    }
    else
    {
        mid=(i+j)/2;//declaring point of splitting arrray
        if (a[mid]==x)
        {
            printf("%d", mid);//aka if middle element is desired element
        }
        else
        {
            if (a[mid]>x)
            {
                bs(a, i, mid-1, x);//calling recursive for 1st half of array
            }
            else
            {
                bs(a, mid+1, j, x);//for 2nd half
            }
        }
    }
    return 0;
}